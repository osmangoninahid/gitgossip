repos:
  - repo: local
    hooks:
      - id: ruff
        name: Ruff Linter
        entry: uv run ruff check .
        language: system
        pass_filenames: false

      - id: black
        name: Black Formatter
        entry: uv run black
        language: system
        types_or: [python]

      - id: isort
        name: Isort Imports
        entry: uv run isort
        language: system
        types_or: [python]

      - id: pylint
        name: Pylint
        entry: uv run pylint
        language: system
        types_or: [python]

      - id: mypy
        name: Mypy Type Checker
        entry: uv run mypy
        language: system
        types_or: [python]
  - repo: local
    hooks:
      - id: show-conventional-commit-types
        name: ðŸ’¡ Conventional Commit Help
        entry: >
          bash -c "echo 'Allowed Conventional Commit types:
            â€¢ feat(scope): A new feature
            â€¢ fix(scope): A bug fix
            â€¢ chore(scope): Build or tooling changes
            â€¢ test(scope): Adding or modifying tests
            â€¢ refactor(scope): Code change that neither fixes a bug nor adds a feature
            â€¢ docs(scope): Documentation updates
            â€¢ merge(scope): Merge-related commits
            â€¢ custom(scope): Internal/custom commits
          '"
        language: system
        stages: [ commit-msg ]
        pass_filenames: false
        always_run: true
        verbose: true

  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.6.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args:
          - --strict
          - --force-scope
          - --verbose
          - feat
          - fix
          - chore
          - test
          - custom
          - merge
          - docs
          - refactor

  - repo: local
    hooks:
      - id: uv-sync-locked
        name: UV sync locked dependencies
        description: Ensures pyproject.toml and uv.lock remain synchronized.
        entry: uv sync --locked --group local
        language: python
        pass_filenames: false
        additional_dependencies: [uv]
        files: ^(pyproject\.toml|uv\.lock)$
